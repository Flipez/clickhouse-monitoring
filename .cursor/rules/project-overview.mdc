---
description: 
globs: 
alwaysApply: true
---
# ClickHouse Monitoring Dashboard - Project Overview

This is a Next.js-based ClickHouse monitoring dashboard that provides comprehensive insights into ClickHouse cluster performance, query analysis, and table management.

## Project Purpose
A simple UI for ClickHouse monitoring that relies on `system.*` tables to help monitor and provide overview of your ClickHouse cluster. Features include query monitoring, cluster monitoring, table and parts information, useful tools, and visualization metric charts.

## Technology Stack
- **Framework**: Next.js 15 with App Router
- **Language**: TypeScript with strict mode
- **UI Framework**: React 19
- **Styling**: Tailwind CSS with custom design system
- **UI Components**: Radix UI primitives + shadcn/ui + Tremor charts
- **Database Client**: @clickhouse/client for server-side, @clickhouse/client-web for browser
- **Testing**: Jest + Cypress for E2E
- **Package Manager**: pnpm
- **Build Tool**: Turbo with Next.js turbopack

## Key Dependencies
- **Data Visualization**: @tremor/react, recharts, @uiw/react-heat-map
- **Tables**: @tanstack/react-table
- **Forms**: react-hook-form with @hookform/resolvers
- **Validation**: zod
- **Icons**: @radix-ui/react-icons, lucide-react
- **Analytics**: @vercel/analytics

## Main Configuration Files
- [package.json](mdc:package.json) - Dependencies and scripts
- [next.config.ts](mdc:next.config.ts) - Next.js configuration with standalone output
- [tsconfig.json](mdc:tsconfig.json) - TypeScript configuration with path aliases
- [tailwind.config.js](mdc:tailwind.config.js) - Tailwind with custom Tremor integration
- [middleware.ts](mdc:middleware.ts) - Request middleware for headers

## Core Architecture Files
- [app/layout.tsx](mdc:app/layout.tsx) - Root layout with providers
- [lib/clickhouse.ts](mdc:lib/clickhouse.ts) - Main ClickHouse client and data fetching
- [menu.ts](mdc:menu.ts) - Navigation menu configuration with SQL queries
- [components/table.tsx](mdc:components/table.tsx) - Main data table component pattern

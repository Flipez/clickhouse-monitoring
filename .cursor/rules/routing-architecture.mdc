---
description: 
globs: 
alwaysApply: true
---
# Routing Architecture & File Structure

This project uses Next.js App Router with a complex dynamic routing structure designed for multi-host ClickHouse monitoring.

## Route Structure Overview

### Root Level Routes
- `/` - [app/page.tsx](mdc:app/page.tsx) - Root redirect
- `/dashboard` - [app/dashboard/](mdc:app/dashboard) - Custom dashboard builder
- `/healthz` - [app/healthz/](mdc:app/healthz) - Health check endpoint
- `/play` - [app/play/](mdc:app/play) - SQL query playground

### Dynamic Host Routes (`/[host]/*`)
The main application routes are under `/[host]` to support multiple ClickHouse hosts:

#### Core Pages
- `/[host]/overview` - Cluster overview and metrics
- `/[host]/tables` - Table management and explorer  
- `/[host]/database/[database]` - Database explorer
- `/[host]/database/[database]/[table]` - Detailed table view with parallel routes

#### Query Management
- `/[host]/[query]` - Dynamic query pages (see [app/[host]/[query]/](mdc:app/[host]/[query]/))
- `/[host]/query/[query_id]` - Specific query details
- `/[host]/explain` - Query EXPLAIN tool

#### Cluster Monitoring  
- `/[host]/clusters` - Cluster list
- `/[host]/clusters/[cluster]/*` - Cluster-specific views
- `/[host]/replica/[replica]/*` - Replica management

#### Advanced Features
- `/[host]/charts/[charts]` - Dynamic chart combinations
- `/[host]/part-info/[database]/[table]` - Partition information
- `/[host]/disks` - Disk usage monitoring

## Parallel Routes (Advanced)
The table detail page uses Next.js parallel routes for different engine types:
- `@mergetree` - MergeTree engine details
- `@dictionary` - Dictionary table details  
- `@view` - View details
- `@materializedview` - Materialized view details
- `@nav` - Navigation component

## API Routes
Located in [app/api/](mdc:app/api):
- `/api/version` - Version information
- `/api/timezone` - Timezone detection
- `/api/healthz` - Health endpoint
- `/api/pageview` - Analytics tracking
- `/api/init` - Initialization endpoint

## Key Patterns

### Dynamic Query Pages
The `/[host]/[query]` route dynamically loads query configurations from [app/[host]/[query]/clickhouse-queries/](mdc:app/[host]/[query]/clickhouse-queries/) based on the URL segment.

### Multi-Host Support  
The `[host]` parameter enables switching between different ClickHouse instances. Host ID is managed via:
- [lib/server-context.ts](mdc:lib/server-context.ts) - Server-side context
- [lib/scoped-link.ts](mdc:lib/scoped-link.ts) - Client-side routing helpers

### Layout Composition
Each route level has its own layout file for nested UI composition and loading states.

name: Test

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

env:
  CLICKHOUSE_HOST: http://localhost:8123
  CLICKHOST_USER: default
  CLICKHOST_PASS: ''
  CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

permissions:
  contents: read
  id-token: write

jobs:
  e2e-test:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        containers: [1]
        browser: [chrome, firefox, edge]
        clickhouse: [24.5, 24.6]

    services:
      clickhouse:
        image: ghcr.io/duyet/docker-images:clickhouse_${{ matrix.clickhouse}}
        ports:
          - 8123:8123
          - 9000:9000
        options: >-
          --health-cmd "wget --no-verbose --tries=1 --spider http://localhost:8123/?query=SELECT%201 || exit 1"
          --health-interval 30s
          --health-timeout 10s
          --health-retries 5
          --health-start-period 30s

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn

      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-

      - name: Install dependencies
        run: yarn install

      - name: Build
        run: yarn build

      - name: Test e2e
        uses: cypress-io/github-action@v6
        with:
          command: yarn e2e:headless
          browser: ${{ matrix.browser }}
          parallel: true
          record: true

  components-test:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        node: [20, 21]
        browser: [chrome, firefox]
        clickhouse: [24.5, 24.6]

    services:
      clickhouse:
        image: ghcr.io/duyet/docker-images:clickhouse_${{ matrix.clickhouse }}
        ports:
          - 8123:8123
          - 9000:9000
        options: >-
          --health-cmd "wget --no-verbose --tries=1 --spider http://localhost:8123/?query=SELECT%201 || exit 1"
          --health-interval 30s
          --health-timeout 10s
          --health-retries 5
          --health-start-period 30s

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: yarn

      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-

      - name: Install dependencies
        run: yarn install

      - name: Test components
        uses: cypress-io/github-action@v6
        with:
          component: true
          command: yarn component:headless
          browser: ${{ matrix.browser }}
          parallel: true
          record: true


  unittest:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        node: [20, 21]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: yarn

      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-

      - name: Install dependencies
        run: |
          yarn install

      - name: Jest
        run: |
          yarn test
